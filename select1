
select d.*, oph.OPH_ID
from MSK.DOC d
inner join MSK.PORTFOLIO pf on d.PF_ID = pf.PF_ID
inner join MSK.OPER_HISTORY oph on pf.OPH_ID = oph.OPH_ID
inner join MSK.CITIZEN cit on oph.CIT_ID = cit.CIT_ID
where d.CDT_ID = 5 and cit.CIT_SNILS = '14049620342'
select d.*, oph.OPH_ID
from MSK.DOC d
inner join MSK.PORTFOLIO pf on d.PF_ID = pf.PF_ID
inner join MSK.OPER_HISTORY oph on pf.OPH_ID = oph.OPH_ID
inner join MSK.CITIZEN cit on oph.CIT_ID = cit.CIT_ID
where d.CDT_ID = 5 and cit.CIT_SNILS = '13520377430'
select * from msk.USERS where COU_CODE = 205063

SELECT D.DOC_ID, CDT.CDT_NAME, D.DOC_INCOMING_NUM, D.DOC_DATE, D.DOC_IS_ACTUAL, D.COU_CODE, D.PF_ID,
P.COU_CODE, DE.DEC_DATE, DE.DEC_IS_APPROVE, DE.DEC_IS_ACTUAL, DE.DEC_SUM, DE.APP_ID, CDS.CDS_NAME,
A.APP_SUM, E.EXPT_SHORT_NAME
FROM MSK.DOC D
JOIN MSK.CLS_DOC_TYPE CDT ON D.CDT_ID=CDT.CDT_ID
JOIN MSK.PORTFOLIO P ON D.PF_ID=P.PF_ID
LEFT JOIN MSK.DECISION DE ON DE.DOC_ID=D.DOC_ID
LEFT JOIN MSK.CLS_DECISION_STATUS CDS ON DE.CDS_ID=CDS.CDS_ID
LEFT JOIN MSK.APPLICATION A ON D.DOC_ID=A.DOC_ID
LEFT JOIN MSK.CLS_EXPENSE_TYPE E ON E.EXPT_ID=A.EXPT_ID
WHERE D.PF_ID IN (
SELECT P.PF_ID FROM MSK.PORTFOLIO P
JOIN MSK.OPER_HISTORY OH ON P.OPH_ID=OH.OPH_ID
JOIN MSK.CITIZEN C ON OH.CIT_ID=C.CIT_ID
WHERE C.CIT_SNILS=06082213123)
ORDER BY D.DOC_DATE, D.DOC_ID

select cou.COU_PARENT_CODE, count(d.DOC_ID)  from MSK.APPLICATION app
inner join MSK.DOC d on app.DOC_ID = d.DOC_ID and d.DOC_REC_DATE > '2019-01-01 00:00:00'
inner join MSK.CLS_ORG_UNIT cou on d.COU_CODE = cou.COU_CODE
    and cou.COU_PARENT_CODE in (21000, 22000, 23000, 25000, 29000, 34000, 51000, 57000, 60000, 69000, 85000, 87000, 88000)
group by cou.COU_PARENT_CODE;
SELECT CO.COT_NAME, CDT.CDT_NAME, O.*
FROM MSK.OPERATION O
JOIN MSK.CLS_OPER_TYPE CO ON O.COT_ID=CO.COT_ID
INNER JOIN MSK.OPER_HISTORY OPH ON O.OPH_ID=OPH.OPH_ID
INNER JOIN MSK.CITIZEN C ON OPH.CIT_ID=C.CIT_ID
LEFT JOIN MSK.DOC D ON O.DOC_ID=D.DOC_ID
LEFT JOIN MSK.CLS_DOC_TYPE CDT ON D.CDT_ID=CDT.CDT_ID
WHERE C.CIT_SNILS=11213969926
ORDER BY O.OPR_SYS_DATE, O.OPR_ID



-------------------------------------------
SELECT column_1, column_2 FROM table;
SELECT column FROM table WHERE conditions_that_apply;
SELECT * FROM table WHERE column = value;
SELECT * FROM table WHERE column LIKE val%;



INSERT INTO table1 (111, 222, 333)
VALUES ('0111', '0222', '0333'),
(00111', '00222', '00333');


SELECT 111, 333 FROM db;

SELECT size FROM tourneys WHERE name = 'Irma';

===============
=	Равно
!=	Не равно
<	Меньше, чем
>	Больше, чем
<=	Меньше или равно
>=	Больше или равно
BETWEEN	проверяет, находится ли значение в заданном диапазоне
IN	проверяет, содержится ли значение строки в наборе указанных значений
EXISTS	проверяет, существуют ли строки при заданных условиях
LIKE	проверяет, соответствует ли значение указанной строке
IS NULL	Проверяет значения NULL
IS NOT NULL	Проверяет все значения, кроме NULL
================

SELECT COUNT(entree) FROM dinners WHERE entree = 'tofu';

SELECT MIN(snils) FROM tourneys;


SELECT COUNT(name), side FROM dinners GROUP BY side HAVING COUNT(name) >= 3;

----------
SELECT table1.column1, table2.column2
FROM table1
JOIN table2 ON table1.related_column=table2.related_column;


SELECT table1.column1, table2.column2
FROM table1
JOIN table2 ON table1.related_column=table2.related_column;
---------

SELECT tourneys.name, tourneys.size, dinners.birthdate
FROM tourneys
LEFT JOIN dinners ON tourneys.name=dinners.name;



SELECT tourneys.name, tourneys.size, dinners.birthdate
FROM tourneys
RIGHT JOIN dinners ON tourneys.name=dinners.name;

SELECT tourneys.name, tourneys.size, dinners.birthdate
FROM tourneys
FULL JOIN dinners ON tourneys.name=dinners.name;

------------
SELECT name FROM tourneys UNION SELECT name FROM dinners;
SELECT name FROM tourneys UNION ALL SELECT name FROM dinners;
------------

SELECT name, wins FROM tourneys
WHERE wins > (
SELECT wins FROM tourneys WHERE name = 'Barbara'
);


SELECT name, entree, side, dessert
FROM dinners
WHERE name = (SELECT name FROM tourneys
WHERE wins = (SELECT MAX(wins) FROM tourneys));

-------------------------
