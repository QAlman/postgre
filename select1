
SELECT column_1, column_2 FROM table;
SELECT column FROM table WHERE conditions_that_apply;
SELECT * FROM table WHERE column = value;
SELECT * FROM table WHERE column LIKE val%;



INSERT INTO table1 (111, 222, 333)
VALUES ('0111', '0222', '0333'),
(00111', '00222', '00333');


SELECT 111, 333 FROM db;

SELECT size FROM tourneys WHERE name = 'Irma';

===============
=	Равно
!=	Не равно
<	Меньше, чем
>	Больше, чем
<=	Меньше или равно
>=	Больше или равно
BETWEEN	проверяет, находится ли значение в заданном диапазоне
IN	проверяет, содержится ли значение строки в наборе указанных значений
EXISTS	проверяет, существуют ли строки при заданных условиях
LIKE	проверяет, соответствует ли значение указанной строке
IS NULL	Проверяет значения NULL
IS NOT NULL	Проверяет все значения, кроме NULL
================

SELECT COUNT(entree) FROM dinners WHERE entree = 'tofu';

SELECT MIN(snils) FROM tourneys;


SELECT COUNT(name), side FROM dinners GROUP BY side HAVING COUNT(name) >= 3;

----------
SELECT table1.column1, table2.column2
FROM table1
JOIN table2 ON table1.related_column=table2.related_column;


SELECT table1.column1, table2.column2
FROM table1
JOIN table2 ON table1.related_column=table2.related_column;
---------

SELECT tourneys.name, tourneys.size, dinners.birthdate
FROM tourneys
LEFT JOIN dinners ON tourneys.name=dinners.name;



SELECT tourneys.name, tourneys.size, dinners.birthdate
FROM tourneys
RIGHT JOIN dinners ON tourneys.name=dinners.name;

SELECT tourneys.name, tourneys.size, dinners.birthdate
FROM tourneys
FULL JOIN dinners ON tourneys.name=dinners.name;

------------
SELECT name FROM tourneys UNION SELECT name FROM dinners;
SELECT name FROM tourneys UNION ALL SELECT name FROM dinners;
------------

SELECT name, wins FROM tourneys
WHERE wins > (
SELECT wins FROM tourneys WHERE name = 'Barbara'
);


SELECT name, entree, side, dessert
FROM dinners
WHERE name = (SELECT name FROM tourneys
WHERE wins = (SELECT MAX(wins) FROM tourneys));

-------------------------
